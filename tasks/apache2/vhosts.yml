- name: set fact _vhosts
  set_fact:
    _vhosts: "{{ _vhosts + [_vhost_defaults_static | combine(_item, recursive=True) | combine(_dynamic, recursive=True) | combine(item, recursive=True)] }}"
  vars:
    _item: '{{ _vhost_defaults_dynamic | combine(item, recursive=True) }}'
    _dynamic:
      data_path: "{{ webserver_vhost_data_path[_item.type] }}"
      home_path: "{{ webserver_vhost_home_path[_item.type] }}"
      home_perms:
        owner: "{{ item.name if _item.home_user_owned else 'www-data' }}"
        group: "{{ 'www-data' if _item.home_user_owned else item.name }}"
        mode: "{{ '0510' if _item.home_user_owned else '0150' }}"
      document_root: "{{ [webserver_vhost_home_path[_item.type], item.name] | join('/') }}{{ '/public' if _item.type == 'share' else '' }}"
      hoster:
        password: "{{ _item.secret }}"
      website:
        db: "{{ True if _item.website.type in ['wordpress'] else False }}"
        name: "{{ item.name }}"
        password: "{{ _item.secret }}"
      db:
        name: "{{ item.name }}"
        user: "{{ item.name }}"
        password: "{{ _item.secret }}"
      wsgi:
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        venv_path: "{{ '../private/venv' if _item.type == 'share' else 'venv' }}"
        venv_requirements: "{{ '../private/requirements.txt' if _item.type == 'share' else 'requirements.txt' }}"
        venv_freeze: "{{ '../private/freeze.txt' if _item.type == 'share' else 'freeze.txt' }}"
      http:
        redirect: "{{ ['https', item.server_name] | join(' ') }}"
        require: "{{ 'grant_share_all' if _item.type == 'share' else 'require_all_granted' }}"
      https:
        empty: "{{ True if _item.type == 'redirect' else False }}"
        redirect: "{{ '' if _item.server_alias == '' else ['https', item.server_name] | join(' ') }}"
        includes: "{{ [item.name] if _item.type == 'share' else [] }}"
        require: "{{ 'grant_share_all' if _item.type == 'share' else 'require_all_granted' }}"
  loop: '{{ webserver_vhosts }}'
  loop_control:
    label: "{{ item.name }}"
  tags: webserver_tmp_vhost_debug_set_fact_performance

#- name: debug _vhosts
#  debug:
#    msg: "{{ _vhosts }}"

- name: set fact _vhostfilter
  set_fact:
    _vhostfilter: "{{ vhostfilter | default(_vhosts | map(attribute='name') | list) }}"

#- name: debug _vhostfilter
#  debug:
#    msg: "{{ _vhostfilter }}"

- name: include vhosts share data
  include_tasks: vhosts_share_data.yml
  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"

- name: tags-block
  tags: webserver_authorized_keys
  block:
  - name: include authorized keys
    include_tasks: authorized_keys.yml
    when: include_webserver_authorized_keys

#- name: deploy systemd mount units for share bindmounts
#  template:
#    src: "apache2/service/share_path.mount.j2"
#    dest: "/etc/systemd/system/{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
#  loop_control:
#    loop_var: vhost
#    label: "/etc/systemd/system/{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#
#- name: enable and start systemd mount units for share bindmounts
#  systemd:
#    daemon_reload: yes
#    enabled: yes
#    state: started
#    name: "{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
#  loop_control:
#    loop_var: vhost
#    label: "{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"

- name: deploy /etc/auto.home
  template:
    src: "apache2/service/auto.home.j2"
    dest: "/etc/auto.home"
    owner: root
    group: root
    mode: 0644
  notify: restart autofs
  vars:
    vhosts: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
  when: vhosts | length > 0

- name: flush handlers
  meta: flush_handlers

- name: set fact _phpfpm_pool_names
  set_fact:
    _phpfpm_pool_names: "{{ webserver_phpfpm_pools | map(attribute='name') | list }}"

#- name: debug _phpfpm_pool_names
#  debug:
#    msg: "{{ _phpfpm_pool_names }}"

- name: set fact _vhosts_fcgid_php
  set_fact:
    _vhosts_fcgid_php: "{{ _vhosts | selectattr('fcgid.extensions', 'contains', 'php') | selectattr('name', 'in', _vhostfilter) | list | map(attribute='name') }}"

- name: find php upstream version
  package_facts:
  when: webserver_phpfpm_pools | length > 0 or _vhosts_fcgid_php | length > 0

- name: set fact _webserver_php_version
  set_fact:
    # find php upstream_version from "epoch:upstream_version+debian_revision", i.e. 2:7.4+76 -> 7.4
    _webserver_php_version: "{{ ansible_facts.packages['php-fpm'].0.version.split(':')[1].split('+')[0] }}"
  when: webserver_phpfpm_pools | length > 0 or _vhosts_fcgid_php | length > 0

- name: create vhosts
  template:
    src: "apache2/sites/vhost.conf.j2"
    dest: '/etc/apache2/sites-available/{{ vhost.name }}.conf'
    owner: root
    group: root
    mode: 0644
  notify: reload apache2
  vars:
    phpfpm_pool_names: '{{ _phpfpm_pool_names }}'
  loop: "{{ _vhosts | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"

- name: set fact _vhosts_fcgid
  set_fact:
    _vhosts_fcgid: "{{ _vhosts_fcgid + [_vhost_fcgid] }}"
  vars:
    _vhost_fcgid:
      name: '{{ item.name }}'
      data_path: '{{ item.data_path }}'
      fcgid: '{{ item.fcgid }}'
  loop: "{{ _vhosts | selectattr('fcgid.extensions') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    label: "{{ item.name }}"

#- name: debug _vhosts_fcgid
#  debug:
#    msg: "{{ _vhosts_fcgid }}"

- name: include fcgid
  include_tasks: vhosts_fcgid.yml
  loop: "{{ _vhosts_fcgid | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost_fcgid

- name: set fact _vhosts_wsgi
  set_fact:
    _vhosts_wsgi: "{{ _vhosts_wsgi + [_vhost_wsgi] }}"
  vars:
    _vhost_wsgi:
      name: '{{ item.name }}'
      document_root: '{{ item.document_root }}'
      app: '{{ item.wsgi.app }}'
      application_group: '{{ item.wsgi.app }}'
      content: '{{ item.wsgi.content }}'
      owner: '{{ item.wsgi.owner }}'
      group: '{{ item.wsgi.group }}'
      mode: '{{ item.wsgi.mode }}'
      venv: '{{ item.wsgi.venv }}'
      venv_system_pkgs: '{{ item.wsgi.venv_system_pkgs }}'
      venv_path: '{{ item.wsgi.venv_path }}'
      venv_requirements: '{{ item.wsgi.venv_requirements }}'
      venv_freeze: '{{ item.wsgi.venv_freeze }}'
  loop: "{{ _vhosts | selectattr('wsgi.app') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    label: "{{ item.name }}"

#- name: debug _vhosts_wsgi
#  debug:
#    msg: "{{ _vhosts_wsgi }}"

- name: install wsgi venv dependencies
  package:
    name: python3-venv
    state: present
  when: _vhosts_wsgi | selectattr('venv') | list

- name: include wsgi
  include_tasks: vhosts_wsgi.yml
  loop: "{{ _vhosts_wsgi | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost_wsgi

- name: enable vhosts
  file:
    src: '../sites-available/{{ vhost.name }}.conf'
    dest: '/etc/apache2/sites-enabled/{{ vhost.name }}.conf'
    state: link
  notify: reload apache2
  loop: "{{ _vhosts | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"
  when: not ansible_check_mode

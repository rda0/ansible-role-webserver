- name: set fact _vhosts
  set_fact:
    _vhosts: "{{ _vhosts + [_vhost] }}"
  vars:
    _vhost:
      name: '{{ item.name }}'
      type: "{{ item.type|default('server') }}"
      server_name: '{{ item.server_name }}'
      server_alias: "{{ item.server_alias|default('') }}"
      server_admin: "{{ item.server_admin|default(webserver_server_admin) }}"
      data_path: "{{ item.data_path|default(webserver_vhost_data_path[item.type|default('server')]) }}"
      home_path: "{{ item.home_path|default(webserver_vhost_home_path[item.type|default('server')]) }}"
      document_root: "{{ item.document_root|default([item.data_path|default(webserver_vhost_data_path[item.type|default('server')]), item.name]|join('/')) }}{{ '/public' if item.type|default('server') == 'share' else '' }}"
      secret: "{{ item.secret|default('') }}"
      hoster:
        user: "{{ (item.hoster|default({})).user|default(webserver_hoster_name) }}"
        email: "{{ (item.hoster|default({})).email|default(webserver_website_admin_email) }}"
        password: "{{ (item.hoster|default({})).password|default(item.secret|default('')) }}"
      website:
        db: "{{ (item.website|default({})).db|default(True if (item.website|default({})).type|default('') in ['wordpress'] else False) }}"
        type: "{{ (item.website|default({})).type|default('') }}"
        name: "{{ (item.website|default({})).name|default(item.name) }}"
        user: "{{ (item.website|default({})).user|default(webserver_website_admin_name) }}"
        email: "{{ (item.website|default({})).email|default(webserver_website_admin_email) }}"
        password: "{{ (item.website|default({})).password|default(item.secret|default('')) }}"
        migrate: "{{ (item.website|default({})).migrate|default(False) }}"
      db:
        delegate: "{{ (item.db|default({})).delegate|default(webserver_db_delegate) }}"
        host: "{{ (item.db|default({})).host|default(webserver_db_host) }}"
        name: "{{ (item.db|default({})).name|default(item.name) }}"
        user: "{{ (item.db|default({})).user|default(item.name) }}"
        password: "{{ (item.db|default({})).password|default(item.secret|default('')) }}"
      http:
        empty: "{{ (item.http|default({})).empty|default(True) }}"
        redirect: "{{ (item.http|default({})).redirect|default(['https', item.server_name]|join(' ')) }}"
        includes: "{{ (item.http|default({})).includes|default([]) }}"
        require: "{{ (item.http|default({})).require|default('grant_share_all' if item.type|default('server') == 'share' else 'require_all_granted') }}"
        fcgid: "{{ (item.http|default({})).fcgid|default([]) }}"
        wsgi:
          app: "{{ ((item.http|default({})).wsgi|default({})).app|default('') }}"
          static: "{{ ((item.http|default({})).wsgi|default({})).static|default([]) }}"
          script_alias: "{{ ((item.http|default({})).wsgi|default({})).script_alias|default('/') }}"
          processes: "{{ ((item.http|default({})).wsgi|default({})).processes|default(2) }}"
          threads: "{{ ((item.http|default({})).wsgi|default({})).threads|default(5) }}"
      https:
        cert: "{{ (item.https|default({})).cert|default('') }}"
        empty: "{{ (item.https|default({})).empty|default(True if item.type|default('server') == 'redirect' else False) }}"
        redirect: "{{ (item.https|default({})).redirect|default('' if item.server_alias|default('') == '' else ['https', item.server_name]|join(' ')) }}"
        includes: "{{ (item.https|default({})).includes|default([]) }}"
        require: "{{ (item.https|default({})).require|default('grant_share_all' if item.type|default('server') == 'share' else 'require_all_granted') }}"
        fcgid: "{{ (item.https|default({})).fcgid|default([]) }}"
        wsgi:
          app: "{{ ((item.https|default({})).wsgi|default({})).app|default('') }}"
          static: "{{ ((item.https|default({})).wsgi|default({})).static|default([]) }}"
          script_alias: "{{ ((item.https|default({})).wsgi|default({})).script_alias|default('/') }}"
          processes: "{{ ((item.https|default({})).wsgi|default({})).processes|default(2) }}"
          threads: "{{ ((item.https|default({})).wsgi|default({})).threads|default(5) }}"
  loop: '{{ webserver_vhosts }}'

#- name: debug _vhosts
#  debug:
#    msg: "{{ _vhosts }}"

- name: include vhosts share data
  include_tasks: vhosts_share_data.yml
  loop: "{{ _vhosts|selectattr('type', 'equalto', 'share')|list }}"
  loop_control:
    loop_var: vhost

#- name: deploy systemd mount units for share bindmounts
#  template:
#    src: "apache2/service/share_path.mount.j2"
#    dest: "/etc/systemd/system/{{ vhost.home_path|regex_replace('^\\/', '')|replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts|selectattr('type', 'equalto', 'share')|list }}"
#  loop_control:
#    loop_var: vhost
#    label: "/etc/systemd/system/{{ vhost.home_path|regex_replace('^\\/', '')|replace('/', '-') }}-{{ vhost.name }}.mount"
#
#- name: enable and start systemd mount units for share bindmounts
#  systemd:
#    daemon_reload: yes
#    enabled: yes
#    state: started
#    name: "{{ vhost.home_path|regex_replace('^\\/', '')|replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts|selectattr('type', 'equalto', 'share')|list }}"
#  loop_control:
#    loop_var: vhost
#    label: "{{ vhost.home_path|regex_replace('^\\/', '')|replace('/', '-') }}-{{ vhost.name }}.mount"

- name: deploy /etc/auto.home
  template:
    src: "apache2/service/auto.home.j2"
    dest: "/etc/auto.home"
  notify: restart autofs
  vars:
    vhosts: "{{ _vhosts|selectattr('type', 'equalto', 'share')|list }}"

- name: flush handlers
  meta: flush_handlers

- name: set fact _phpfpm_pool_names
  set_fact:
    _phpfpm_pool_names: "{{ webserver_phpfpm_pools|map(attribute='name')|list }}"

#- name: debug _phpfpm_pool_names
#  debug:
#    msg: "{{ _phpfpm_pool_names }}"

- name: create vhosts
  template:
    src: "apache2/sites/vhost.conf.j2"
    dest: '/etc/apache2/sites-available/{{ vhost.name }}.conf'
  notify: reload apache2
  vars:
    phpfpm_pool_names: '{{ _phpfpm_pool_names }}'
  loop: '{{ _vhosts }}'
  loop_control:
    loop_var: vhost

- name: set fact _vhosts_fcgid
  set_fact:
    _vhosts_fcgid: "{{ _vhosts_fcgid + [_vhost_fcgid] }}"
  vars:
    _vhost_fcgid:
      name: '{{ item.name }}'
      data_path: '{{ item.data_path }}'
      fcgid: '{{ item.https.fcgid }}'
  loop: "{{ _vhosts|selectattr('https.fcgid')|list }}"

#- name: debug _vhosts_fcgid
#  debug:
#    msg: "{{ _vhosts_fcgid }}"

- name: include fcgid
  include_tasks: vhosts_fcgid.yml
  loop: "{{ _vhosts_fcgid }}"
  loop_control:
    loop_var: vhost_fcgid

- name: enable vhosts
  file:
    src: '../sites-available/{{ vhost.name }}.conf'
    dest: '/etc/apache2/sites-enabled/{{ vhost.name }}.conf'
    state: link
  notify: reload apache2
  loop: '{{ _vhosts }}'
  loop_control:
    loop_var: vhost

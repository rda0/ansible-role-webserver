- name: set fact _vhosts
  set_fact:
    _vhosts: "{{ _vhosts + [_webserver_vhost_template | combine(_vhost, recursive=True) | combine(item, recursive=True)] }}"
  vars:
    _type: "{{ item.type | default('server') }}"
    _secret: "{{ item.secret | default('') }}"
    _server_alias: "{{ item.server_alias | default('') }}"
    _home_path: "{{ item.home_path | default(webserver_vhost_home_path[_type]) }}"
    _home_user_owned: "{{ item.home_user_owned | default(False) }}"
    _vhost:
      name: '{{ item.name }}'
      type: "{{ _type }}"
      server_name: '{{ item.server_name }}'
      server_alias: "{{ _server_alias }}"
      data_path: "{{ item.data_path | default(webserver_vhost_data_path[_type]) }}"
      home_path: "{{ _home_path }}"
      home_user_owned: "{{ _home_user_owned }}"
      home_perms:
        owner: "{{ item.home_perms.owner | default(item.name if _home_user_owned else 'www-data') }}"
        group: "{{ item.home_perms.group | default('www-data' if _home_user_owned else item.name) }}"
        mode: "{{ item.home_perms.mode | default('0510' if _home_user_owned else '0150') }}"
      document_root: "{{ item.document_root | default([_home_path, item.name] | join('/')) }}{{ '/public' if _type == 'share' else '' }}"
      secret: "{{ _secret }}"
      hoster:
        password: "{{ item.hoster.password | default(_secret) }}"
      website:
        db: "{{ item.website.db | default(True if item.website.type | default('') in ['wordpress'] else False) }}"
        name: "{{ item.website.name | default(item.name) }}"
        password: "{{ item.website.password | default(_secret) }}"
      db:
        name: "{{ item.db.name | default(item.name) }}"
        user: "{{ item.db.user | default(item.name) }}"
        password: "{{ item.db.password | default(_secret) }}"
      http:
        redirect: "{{ item.http.redirect | default(['https', item.server_name] | join(' ')) }}"
        require: "{{ item.http.require | default('grant_share_all' if _type == 'share' else 'require_all_granted') }}"
        wsgi:
          owner: "{{ item.http.wsgi.owner | default(item.name) }}"
          group: "{{ item.http.wsgi.group | default(item.name) }}"
          venv_path: "{{ item.http.wsgi.venv_path | default('../private/venv' if _type == 'share' else 'venv') }}"
          venv_requirements: "{{ item.http.wsgi.venv_requirements | default('../private/requirements.txt' if _type == 'share' else 'requirements.txt') }}"
          venv_freeze: "{{ item.http.wsgi.venv_freeze | default('../private/freeze.txt' if _type == 'share' else 'freeze.txt') }}"
      https:
        empty: "{{ item.https.empty | default(True if _type == 'redirect' else False) }}"
        redirect: "{{ item.https.redirect | default('' if _server_alias == '' else ['https', item.server_name] | join(' ')) }}"
        includes: "{{ item.https.includes | default([item.name] if _type == 'share' else []) }}"
        require: "{{ item.https.require | default('grant_share_all' if _type == 'share' else 'require_all_granted') }}"
        wsgi:
          owner: "{{ item.https.wsgi.owner | default(item.name) }}"
          group: "{{ item.https.wsgi.group | default(item.name) }}"
          venv_path: "{{ item.https.wsgi.venv_path | default('../private/venv' if _type == 'share' else 'venv') }}"
          venv_requirements: "{{ item.https.wsgi.venv_requirements | default('../private/requirements.txt' if _type == 'share' else 'requirements.txt') }}"
          venv_freeze: "{{ item.https.wsgi.venv_freeze | default('../private/freeze.txt' if _type == 'share' else 'freeze.txt') }}"
  loop: '{{ webserver_vhosts }}'
  loop_control:
    label: "{{ item.name }}"

#- name: debug _vhosts
#  debug:
#    msg: "{{ _vhosts }}"

- name: set fact _vhostfilter
  set_fact:
    _vhostfilter: "{{ vhostfilter | default(_vhosts | map(attribute='name') | list) }}"

#- name: debug _vhostfilter
#  debug:
#    msg: "{{ _vhostfilter }}"

- name: include vhosts share data
  include_tasks: vhosts_share_data.yml
  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"

- name: tags-block
  tags: webserver_authorized_keys
  block:
  - name: include authorized keys
    include_tasks: authorized_keys.yml
    when: include_webserver_authorized_keys

#- name: deploy systemd mount units for share bindmounts
#  template:
#    src: "apache2/service/share_path.mount.j2"
#    dest: "/etc/systemd/system/{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
#  loop_control:
#    loop_var: vhost
#    label: "/etc/systemd/system/{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#
#- name: enable and start systemd mount units for share bindmounts
#  systemd:
#    daemon_reload: yes
#    enabled: yes
#    state: started
#    name: "{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"
#  loop: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
#  loop_control:
#    loop_var: vhost
#    label: "{{ vhost.home_path | regex_replace('^\\/', '') | replace('/', '-') }}-{{ vhost.name }}.mount"

- name: deploy /etc/auto.home
  template:
    src: "apache2/service/auto.home.j2"
    dest: "/etc/auto.home"
    owner: root
    group: root
    mode: 0644
  notify: restart autofs
  vars:
    vhosts: "{{ _vhosts | selectattr('type', 'equalto', 'share') | list }}"
  when: vhosts | length > 0

- name: flush handlers
  meta: flush_handlers

- name: set fact _phpfpm_pool_names
  set_fact:
    _phpfpm_pool_names: "{{ webserver_phpfpm_pools | map(attribute='name') | list }}"

#- name: debug _phpfpm_pool_names
#  debug:
#    msg: "{{ _phpfpm_pool_names }}"

- name: set fact _vhosts_fcgid_php
  set_fact:
    _vhosts_fcgid_php: "{{ _vhosts | selectattr('https.fcgid.extensions', 'contains', 'php') | selectattr('name', 'in', _vhostfilter) | list | map(attribute='name') }}"

- name: find php upstream version
  package_facts:
  when: webserver_phpfpm_pools | length > 0 or _vhosts_fcgid_php | length > 0

- name: set fact _webserver_php_version
  set_fact:
    # find php upstream_version from "epoch:upstream_version+debian_revision", i.e. 2:7.4+76 -> 7.4
    _webserver_php_version: "{{ ansible_facts.packages['php-fpm'].0.version.split(':')[1].split('+')[0] }}"
  when: webserver_phpfpm_pools | length > 0 or _vhosts_fcgid_php | length > 0

- name: create vhosts
  template:
    src: "apache2/sites/vhost.conf.j2"
    dest: '/etc/apache2/sites-available/{{ vhost.name }}.conf'
    owner: root
    group: root
    mode: 0644
  notify: reload apache2
  vars:
    phpfpm_pool_names: '{{ _phpfpm_pool_names }}'
  loop: "{{ _vhosts | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"

- name: set fact _vhosts_fcgid
  set_fact:
    _vhosts_fcgid: "{{ _vhosts_fcgid + [_vhost_fcgid] }}"
  vars:
    _vhost_fcgid:
      name: '{{ item.name }}'
      data_path: '{{ item.data_path }}'
      fcgid: '{{ item.https.fcgid }}'
  loop: "{{ _vhosts | selectattr('https.fcgid.extensions') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    label: "{{ item.name }}"

#- name: debug _vhosts_fcgid
#  debug:
#    msg: "{{ _vhosts_fcgid }}"

- name: include fcgid
  include_tasks: vhosts_fcgid.yml
  loop: "{{ _vhosts_fcgid | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost_fcgid

- name: set fact _vhosts_wsgi
  set_fact:
    _vhosts_wsgi: "{{ _vhosts_wsgi + [_vhost_wsgi] }}"
  vars:
    _vhost_wsgi:
      name: '{{ item.name }}'
      document_root: '{{ item.document_root }}'
      app: '{{ item.https.wsgi.app }}'
      application_group: '{{ item.https.wsgi.app }}'
      content: '{{ item.https.wsgi.content }}'
      owner: '{{ item.https.wsgi.owner }}'
      group: '{{ item.https.wsgi.group }}'
      mode: '{{ item.https.wsgi.mode }}'
      venv: '{{ item.https.wsgi.venv }}'
      venv_system_pkgs: '{{ item.https.wsgi.venv_system_pkgs }}'
      venv_path: '{{ item.https.wsgi.venv_path }}'
      venv_requirements: '{{ item.https.wsgi.venv_requirements }}'
      venv_freeze: '{{ item.https.wsgi.venv_freeze }}'
  loop: "{{ _vhosts | selectattr('https.wsgi.app') | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    label: "{{ item.name }}"

#- name: debug _vhosts_wsgi
#  debug:
#    msg: "{{ _vhosts_wsgi }}"

- name: install wsgi venv dependencies
  package:
    name: python3-venv
    state: present
  when: _vhosts_wsgi | selectattr('venv') | list

- name: include wsgi
  include_tasks: vhosts_wsgi.yml
  loop: "{{ _vhosts_wsgi | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost_wsgi

- name: enable vhosts
  file:
    src: '../sites-available/{{ vhost.name }}.conf'
    dest: '/etc/apache2/sites-enabled/{{ vhost.name }}.conf'
    state: link
  notify: reload apache2
  loop: "{{ _vhosts | selectattr('name', 'in', _vhostfilter) | list }}"
  loop_control:
    loop_var: vhost
    label: "{{ vhost.name }}"
  when: not ansible_check_mode

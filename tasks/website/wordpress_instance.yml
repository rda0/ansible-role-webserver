#- name: create wordpress database
#  mysql_db:
#    name: "{{ instance.db.name }}"
#    state: present
#  delegate_to: "{{ instance.db.delegate }}"
#
#- name: create wordpress database user
#  mysql_user:
#    name: "{{ instance.db.user }}"
#    password: "{{ instance.db.password }}"
#    priv: "{{ instance.db.name }}.*:ALL"
#    host: "{{ ansible_fqdn }}"
#    state: present
#  delegate_to: "{{ instance.db.delegate }}"

#- name: create wordpress document root
#  file:
#    path: "{{ instance.path }}"
#    owner: "{{ instance.user }}"
#    group: "{{ instance.user }}"
#    mode: 0770
#    state: directory

- name: 'wordpress {{ instance.name }} install files'
  command: >
    wp --path={{ instance.document_root }}
      core download
  become: yes
  become_user: "{{ instance.name }}"
  args:
    creates: "{{ instance.document_root }}/wp-content"

- name: 'wordpress {{ instance.name }} create config'
  command: >
    wp --path={{ instance.document_root }}
      config create
        --dbhost={{ instance.db.host }}
        --dbname={{ instance.db.name }}
        --dbuser={{ instance.db.user }}
        --dbpass={{ instance.db.password }}
  become: yes
  become_user: "{{ instance.name }}"
  args:
    creates: "{{ instance.document_root }}/wp-config.php"

- name: 'wordpress {{ instance.name }} get installation status'
  command: >
    wp --path={{ instance.document_root }}
      core is-installed
  become: yes
  become_user: "{{ instance.name }}"
  register: instance_is_installed
  changed_when: False
  failed_when: False

- name: 'wordpress {{ instance.name }} finalize installation'
  command: >
    wp --path={{ instance.document_root }}
      core install
        --skip-email
        --url={{ instance.server_name }}
        --title="{{ instance.website.name }}"
        --admin_user={{ instance.hoster.user }}
        --admin_password={{ instance.hoster.password }}
        --admin_email={{ instance.hoster.email|replace(webserver_website_wordpress_admin_email_search, webserver_website_wordpress_admin_email_replace) }}
  become: yes
  become_user: "{{ instance.name }}"
  when: not ansible_check_mode and instance_is_installed.rc != 0 and not instance.website.migrate

- name: 'wordpress {{ instance.name }} create customer admin user'
  command: >
    wp --path={{ instance.document_root }}
      user create
        {{ instance.website.user }}
        {{ instance.website.email }}
        --role=administrator
        --user_pass={{ instance.website.password }}
  become: yes
  become_user: "{{ instance.name }}"
  when: not ansible_check_mode and instance_is_installed.rc != 0 and not instance.website.migrate
